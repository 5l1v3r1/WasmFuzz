========================================================

1. build antlr-runtime

cd tree_mutation/
cmake ./
// missing uuid error: sudo apt-get install uuid-dev
//add -fPIC to MY_CXX_WARNING_FLAGS in tree_mutation/CMakeLists.txt
make

========================================================

2. build js treemutatior

cd tree_mutation/js_parser
for f in *.cpp; do g++ -fPIC -I ../runtime/src/ -c $f -std=c++11; done

g++ -shared -std=c++11 *.o ../dist/libantlr4-runtime.a  -o libTreeMutation.so

cc -O3 -funroll-loops -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl ./tree_mutation/js_parser/libTreeMutation.so

//build TreeMutation alone
g++ -std=c++11 *.o ../dist/libantlr4-runtime.a  -o TreeMutation

//build TreeMutation with asan
for f in *.cpp; do g++ -fsanitize=address -I ../runtime/src/ -c $f -std=c++11; done
g++ -fsanitize=address -shared -std=c++11 *.o ../dist/libantlr4-runtime.a  -o libTreeMutation.so

========================================================

3. build xml treemutatior
cd tree_mutation/xml_parser
for f in *.cpp; do g++ -fPIC -I ../runtime/src/ -c $f -std=c++11; done
g++ -shared -std=c++11 *.o ../dist/libantlr4-runtime.a  -o libTreeMutation.so
cc -O3 -funroll-loops -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl ./tree_mutation/xml_parser/libTreeMutation.so
========================================================

AFL:

//add ./js_parser/tree_mutation/libTreeMutation.so to makefile

LLVM_CONFIG=llvm-config-3.8 CXXFLAGS="-DLLVM38" make

========================================================

libplist:

export CC=~/afl-2.52b/afl-gcc
export CXX=~/afl-2.52b/afl-g++
export AFL_USE_ASAN=1
./autogen.sh
make

./afl-fuzz -M f1 -x ~/afl-2.52b/dictionaries/xml.dict -m 4G -t 100+ -i ~/data/ -o ~/libplist_out/ ~/libplist/tools/plistutil -i @@
========================================================

Webkit:

svn checkout https://svn.webkit.org/repository/webkit/trunk/Source Source
svn checkout https://svn.webkit.org/repository/webkit/trunk/Tools Tools
svn checkout https://svn.webkit.org/repository/webkit/trunk/PerformanceTests PerformanceTests
svn checkout https://svn.webkit.org/repository/webkit/trunk/JSTests/stress stress
wget https://svn.webkit.org/repository/webkit/trunk/CMakeLists.txt

//because of some files cannot be compiled with asan, use blacklist
export CC=~/gr/afl-clang-fast
export CXX=~/afl-2.52b/afl-clang-fast++
export AFL_INST_BLACKLIST=/home/b/blacklist.txt
export AFL_USE_ASAN=1
export AFL_INST_RATIO=10
//add CMAKE_EXE_LINKER_FLAGS:STRING=-lpthread in ~/WebKit/WebKitBuild/Release/CMakeCache.txt,
//otherwise, it will report error: undefined reference to 'pthread_getattr_np'
./Tools/Scripts/build-jsc --jsc-only --j14
//in 64bit system, we need to comment out all "setrlimit(" when using asan

./afl-fuzz -M f1 -x ~/afl-2.52b/dictionaries/js.dict -m 4G -t 100+ -i ~/jerry_seeds/ -o ~/jscout_test/ ~/WebKit/WebKitBuild/Release/bin/jsc @@

./afl-fuzz -S f2 -m 4G -t 100+ -i ~/webkit_seeds/ -o ~/webkit_fuzz/ ~/WebKit/WebKitBuild/Release/bin/jsc @@
./afl-fuzz -S f3 -m 4G -t 100+ -i ~/webkit_seeds/ -o ~/webkit_fuzz/ ~/WebKit/WebKitBuild/Release/bin/jsc @@
./afl-fuzz -S f4 -m 4G -t 100+ -i ~/webkit_seeds/ -o ~/webkit_fuzz/ ~/WebKit/WebKitBuild/Release/bin/jsc @@

for f in `ls webkit_fuzz/f*/crashes/id*`; do d=`echo $f | cut -d'/' -f 2`; id=`echo $f | cut -d':' -f 2`; signal=`echo $f | cut -d':' -f 3`; mv $f /home/b/jsc_crash/${d}_id${id:0:6}_sig_${signal:0:2}; done

for f in `ls out/fuzz*/crashes/id*`; do d=`echo $f | cut -d'/' -f 2`; id=`echo $f | cut -d':' -f 2`; signal=`echo $f | cut -d':' -f 3`; mv $f /home/b/chakra_fuzz/chakra_crash/${d}_id${id:0:6}_sig_${signal:0:2}; done

for f in `ls`; do echo $f; /home/b/Webkit_asan/WebKitBuild/Release/bin/jsc $f 2>&1 | grep "JSC::DFG::BasicBlock::removePredecessor"; if [ $? -eq 0 ]; then mv $f /home/b/webkit_crash/removePredecessor/; fi done

find /home/b/WebKit/ -name *.js -exec cp {} /home/b/webkit_seeds/ \;

export ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-6.0/bin/llvm-symbolizer
export ASAN_OPTIONS=symbolize=1

b WTF::fastMalloc
b DFGCFGSimplificationPhase.cpp:387


========================================================

SpiderMonkey:

export CC=~/afl-2.52b/afl-clang-fast
export CXX=~/afl-2.52b/afl-clang-fast++
export CFLAGS+="-fsanitize=address"
export CXXFLAGS+="-fsanitize=address"
export LDFLAGS+="-fsanitize=address"
export AFL_INST_RATIO=30
../configure --enable-optimize --enable-address-sanitizer --disable-jemalloc
make -j8

./afl-fuzz -M f1 -m 4G -t 500+ -i ~/js_seeds_cmin_coverage_only/ -o ~/jscout_test/ ~/webkit/WebKitBuild/Release/bin/jsc @@

========================================================

jerryScript:

export CC=~/afl-2.52b/afl-gcc
export CXX=~/afl-2.52b/afl-g++

python ./tools/build.py --clean --debug --compile-flag=-fsanitize=address --compile-flag=-m32 --compile-flag=-fno-omit-frame-pointer --compile-flag=-fno-common --jerry-libc=off --static-link=off --lto=off --error-message=on --system-allocator=on

./afl-fuzz -M f1 -x ~/afl-2.52b/dictionaries/js.dict -t 500+ -m 2000 -i ~/jerry_seeds/ -o ~/jerry_out/ ~/jerryscript/build/bin/jerry @@
./afl-fuzz -S f2 -t 500+ -m 2000 -i ~/jerry_seeds/ -o ~/jerry_out/ ~/jerryscript/build/bin/jerry @@
./afl-fuzz -S f3 -t 500+ -m 2000 -i ~/jerry_seeds/ -o ~/jerry_out/ ~/jerryscript/build/bin/jerry @@

~/afl-cov --overwrite --live -d ~/jerry_out/f2/ --coverage-cmd "/home/b/jerryscript_gcov/build/bin/jerry AFL_FILE" --code-dir /home/b/jerryscript_gcov/
========================================================
